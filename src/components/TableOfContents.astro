---
import TableOfContentsHeading from '@/components/TableOfContentsHeading.astro'
import type { MarkdownHeading } from 'astro'

interface Props {
  class: string
  headings: MarkdownHeading[]
}

export interface HeadingProps extends MarkdownHeading {
  subheadings: HeadingProps[]
}

const { class: className, headings } = Astro.props
const toc = buildToc(headings)

function buildToc(headings: MarkdownHeading[]) {
  const toc = []
  const parentHeadings = new Map()

  for (const h of headings) {
    const heading = { ...h, subheadings: [] }
    parentHeadings.set(heading.depth, heading)
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 2) {
      toc.push(heading)
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading)
    }
  }

  return toc
}
---

<aside class=`sticky top-20 order-2 -me-28 hidden basis-60 lg:flex lg:flex-col ${className}`>
  <h2 class='font-semibold'>TABLE OF CONTENTS</h2>
  <ul class="text-gray-4 font-200 text-base" id="toc">
      {toc.map((heading) => <TableOfContentsHeading {...heading} />)}
  </ul>
</aside>